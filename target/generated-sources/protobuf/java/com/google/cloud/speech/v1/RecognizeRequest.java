// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/speech/v1/cloud-speech.proto

package com.google.cloud.speech.v1;

/**
 * Protobuf type {@code google.cloud.speech.v1.RecognizeRequest}
 *
 * <pre>
 * `RecognizeRequest` is the only message type sent by the client.
 * `NonStreamingRecognize` sends only one `RecognizeRequest` message and it
 * must contain both an `initial_request` and an 'audio_request`.
 * Streaming `Recognize` sends one or more `RecognizeRequest` messages. The
 * first message must contain an `initial_request` and may contain an
 * 'audio_request`. Any subsequent messages must not contain an
 * `initial_request` and must contain an 'audio_request`.
 * </pre>
 */
public  final class RecognizeRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.cloud.speech.v1.RecognizeRequest)
    RecognizeRequestOrBuilder {
  // Use RecognizeRequest.newBuilder() to construct.
  private RecognizeRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private RecognizeRequest() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private RecognizeRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.cloud.speech.v1.InitialRecognizeRequest.Builder subBuilder = null;
            if (initialRequest_ != null) {
              subBuilder = initialRequest_.toBuilder();
            }
            initialRequest_ = input.readMessage(com.google.cloud.speech.v1.InitialRecognizeRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(initialRequest_);
              initialRequest_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.cloud.speech.v1.AudioRequest.Builder subBuilder = null;
            if (audioRequest_ != null) {
              subBuilder = audioRequest_.toBuilder();
            }
            audioRequest_ = input.readMessage(com.google.cloud.speech.v1.AudioRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(audioRequest_);
              audioRequest_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.speech.v1.SpeechProto.internal_static_google_cloud_speech_v1_RecognizeRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.speech.v1.SpeechProto.internal_static_google_cloud_speech_v1_RecognizeRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.speech.v1.RecognizeRequest.class, com.google.cloud.speech.v1.RecognizeRequest.Builder.class);
  }

  public static final int INITIAL_REQUEST_FIELD_NUMBER = 1;
  private com.google.cloud.speech.v1.InitialRecognizeRequest initialRequest_;
  /**
   * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
   *
   * <pre>
   * The `initial_request` message provides information to the recognizer
   * that specifies how to process the request.
   * The first `RecognizeRequest` message must contain an `initial_request`.
   * Any subsequent `RecognizeRequest` messages must not contain an
   * `initial_request`.
   * </pre>
   */
  public boolean hasInitialRequest() {
    return initialRequest_ != null;
  }
  /**
   * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
   *
   * <pre>
   * The `initial_request` message provides information to the recognizer
   * that specifies how to process the request.
   * The first `RecognizeRequest` message must contain an `initial_request`.
   * Any subsequent `RecognizeRequest` messages must not contain an
   * `initial_request`.
   * </pre>
   */
  public com.google.cloud.speech.v1.InitialRecognizeRequest getInitialRequest() {
    return initialRequest_ == null ? com.google.cloud.speech.v1.InitialRecognizeRequest.getDefaultInstance() : initialRequest_;
  }
  /**
   * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
   *
   * <pre>
   * The `initial_request` message provides information to the recognizer
   * that specifies how to process the request.
   * The first `RecognizeRequest` message must contain an `initial_request`.
   * Any subsequent `RecognizeRequest` messages must not contain an
   * `initial_request`.
   * </pre>
   */
  public com.google.cloud.speech.v1.InitialRecognizeRequestOrBuilder getInitialRequestOrBuilder() {
    return getInitialRequest();
  }

  public static final int AUDIO_REQUEST_FIELD_NUMBER = 2;
  private com.google.cloud.speech.v1.AudioRequest audioRequest_;
  /**
   * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
   *
   * <pre>
   * The audio data to be recognized. For `NonStreamingRecognize`, all the
   * audio data must be contained in the first (and only) `RecognizeRequest`
   *  message. For streaming `Recognize`, sequential chunks of audio data are
   * sent in sequential `RecognizeRequest` messages.
   * </pre>
   */
  public boolean hasAudioRequest() {
    return audioRequest_ != null;
  }
  /**
   * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
   *
   * <pre>
   * The audio data to be recognized. For `NonStreamingRecognize`, all the
   * audio data must be contained in the first (and only) `RecognizeRequest`
   *  message. For streaming `Recognize`, sequential chunks of audio data are
   * sent in sequential `RecognizeRequest` messages.
   * </pre>
   */
  public com.google.cloud.speech.v1.AudioRequest getAudioRequest() {
    return audioRequest_ == null ? com.google.cloud.speech.v1.AudioRequest.getDefaultInstance() : audioRequest_;
  }
  /**
   * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
   *
   * <pre>
   * The audio data to be recognized. For `NonStreamingRecognize`, all the
   * audio data must be contained in the first (and only) `RecognizeRequest`
   *  message. For streaming `Recognize`, sequential chunks of audio data are
   * sent in sequential `RecognizeRequest` messages.
   * </pre>
   */
  public com.google.cloud.speech.v1.AudioRequestOrBuilder getAudioRequestOrBuilder() {
    return getAudioRequest();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (initialRequest_ != null) {
      output.writeMessage(1, getInitialRequest());
    }
    if (audioRequest_ != null) {
      output.writeMessage(2, getAudioRequest());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (initialRequest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInitialRequest());
    }
    if (audioRequest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAudioRequest());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.cloud.speech.v1.RecognizeRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.speech.v1.RecognizeRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.cloud.speech.v1.RecognizeRequest}
   *
   * <pre>
   * `RecognizeRequest` is the only message type sent by the client.
   * `NonStreamingRecognize` sends only one `RecognizeRequest` message and it
   * must contain both an `initial_request` and an 'audio_request`.
   * Streaming `Recognize` sends one or more `RecognizeRequest` messages. The
   * first message must contain an `initial_request` and may contain an
   * 'audio_request`. Any subsequent messages must not contain an
   * `initial_request` and must contain an 'audio_request`.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.speech.v1.RecognizeRequest)
      com.google.cloud.speech.v1.RecognizeRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.speech.v1.SpeechProto.internal_static_google_cloud_speech_v1_RecognizeRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.speech.v1.SpeechProto.internal_static_google_cloud_speech_v1_RecognizeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.speech.v1.RecognizeRequest.class, com.google.cloud.speech.v1.RecognizeRequest.Builder.class);
    }

    // Construct using com.google.cloud.speech.v1.RecognizeRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (initialRequestBuilder_ == null) {
        initialRequest_ = null;
      } else {
        initialRequest_ = null;
        initialRequestBuilder_ = null;
      }
      if (audioRequestBuilder_ == null) {
        audioRequest_ = null;
      } else {
        audioRequest_ = null;
        audioRequestBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.speech.v1.SpeechProto.internal_static_google_cloud_speech_v1_RecognizeRequest_descriptor;
    }

    public com.google.cloud.speech.v1.RecognizeRequest getDefaultInstanceForType() {
      return com.google.cloud.speech.v1.RecognizeRequest.getDefaultInstance();
    }

    public com.google.cloud.speech.v1.RecognizeRequest build() {
      com.google.cloud.speech.v1.RecognizeRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.speech.v1.RecognizeRequest buildPartial() {
      com.google.cloud.speech.v1.RecognizeRequest result = new com.google.cloud.speech.v1.RecognizeRequest(this);
      if (initialRequestBuilder_ == null) {
        result.initialRequest_ = initialRequest_;
      } else {
        result.initialRequest_ = initialRequestBuilder_.build();
      }
      if (audioRequestBuilder_ == null) {
        result.audioRequest_ = audioRequest_;
      } else {
        result.audioRequest_ = audioRequestBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.speech.v1.RecognizeRequest) {
        return mergeFrom((com.google.cloud.speech.v1.RecognizeRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.speech.v1.RecognizeRequest other) {
      if (other == com.google.cloud.speech.v1.RecognizeRequest.getDefaultInstance()) return this;
      if (other.hasInitialRequest()) {
        mergeInitialRequest(other.getInitialRequest());
      }
      if (other.hasAudioRequest()) {
        mergeAudioRequest(other.getAudioRequest());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.speech.v1.RecognizeRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.speech.v1.RecognizeRequest) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.cloud.speech.v1.InitialRecognizeRequest initialRequest_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.cloud.speech.v1.InitialRecognizeRequest, com.google.cloud.speech.v1.InitialRecognizeRequest.Builder, com.google.cloud.speech.v1.InitialRecognizeRequestOrBuilder> initialRequestBuilder_;
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public boolean hasInitialRequest() {
      return initialRequestBuilder_ != null || initialRequest_ != null;
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public com.google.cloud.speech.v1.InitialRecognizeRequest getInitialRequest() {
      if (initialRequestBuilder_ == null) {
        return initialRequest_ == null ? com.google.cloud.speech.v1.InitialRecognizeRequest.getDefaultInstance() : initialRequest_;
      } else {
        return initialRequestBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public Builder setInitialRequest(com.google.cloud.speech.v1.InitialRecognizeRequest value) {
      if (initialRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        initialRequest_ = value;
        onChanged();
      } else {
        initialRequestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public Builder setInitialRequest(
        com.google.cloud.speech.v1.InitialRecognizeRequest.Builder builderForValue) {
      if (initialRequestBuilder_ == null) {
        initialRequest_ = builderForValue.build();
        onChanged();
      } else {
        initialRequestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public Builder mergeInitialRequest(com.google.cloud.speech.v1.InitialRecognizeRequest value) {
      if (initialRequestBuilder_ == null) {
        if (initialRequest_ != null) {
          initialRequest_ =
            com.google.cloud.speech.v1.InitialRecognizeRequest.newBuilder(initialRequest_).mergeFrom(value).buildPartial();
        } else {
          initialRequest_ = value;
        }
        onChanged();
      } else {
        initialRequestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public Builder clearInitialRequest() {
      if (initialRequestBuilder_ == null) {
        initialRequest_ = null;
        onChanged();
      } else {
        initialRequest_ = null;
        initialRequestBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public com.google.cloud.speech.v1.InitialRecognizeRequest.Builder getInitialRequestBuilder() {
      
      onChanged();
      return getInitialRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    public com.google.cloud.speech.v1.InitialRecognizeRequestOrBuilder getInitialRequestOrBuilder() {
      if (initialRequestBuilder_ != null) {
        return initialRequestBuilder_.getMessageOrBuilder();
      } else {
        return initialRequest_ == null ?
            com.google.cloud.speech.v1.InitialRecognizeRequest.getDefaultInstance() : initialRequest_;
      }
    }
    /**
     * <code>optional .google.cloud.speech.v1.InitialRecognizeRequest initial_request = 1;</code>
     *
     * <pre>
     * The `initial_request` message provides information to the recognizer
     * that specifies how to process the request.
     * The first `RecognizeRequest` message must contain an `initial_request`.
     * Any subsequent `RecognizeRequest` messages must not contain an
     * `initial_request`.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.cloud.speech.v1.InitialRecognizeRequest, com.google.cloud.speech.v1.InitialRecognizeRequest.Builder, com.google.cloud.speech.v1.InitialRecognizeRequestOrBuilder> 
        getInitialRequestFieldBuilder() {
      if (initialRequestBuilder_ == null) {
        initialRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.cloud.speech.v1.InitialRecognizeRequest, com.google.cloud.speech.v1.InitialRecognizeRequest.Builder, com.google.cloud.speech.v1.InitialRecognizeRequestOrBuilder>(
                getInitialRequest(),
                getParentForChildren(),
                isClean());
        initialRequest_ = null;
      }
      return initialRequestBuilder_;
    }

    private com.google.cloud.speech.v1.AudioRequest audioRequest_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.cloud.speech.v1.AudioRequest, com.google.cloud.speech.v1.AudioRequest.Builder, com.google.cloud.speech.v1.AudioRequestOrBuilder> audioRequestBuilder_;
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public boolean hasAudioRequest() {
      return audioRequestBuilder_ != null || audioRequest_ != null;
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public com.google.cloud.speech.v1.AudioRequest getAudioRequest() {
      if (audioRequestBuilder_ == null) {
        return audioRequest_ == null ? com.google.cloud.speech.v1.AudioRequest.getDefaultInstance() : audioRequest_;
      } else {
        return audioRequestBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public Builder setAudioRequest(com.google.cloud.speech.v1.AudioRequest value) {
      if (audioRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        audioRequest_ = value;
        onChanged();
      } else {
        audioRequestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public Builder setAudioRequest(
        com.google.cloud.speech.v1.AudioRequest.Builder builderForValue) {
      if (audioRequestBuilder_ == null) {
        audioRequest_ = builderForValue.build();
        onChanged();
      } else {
        audioRequestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public Builder mergeAudioRequest(com.google.cloud.speech.v1.AudioRequest value) {
      if (audioRequestBuilder_ == null) {
        if (audioRequest_ != null) {
          audioRequest_ =
            com.google.cloud.speech.v1.AudioRequest.newBuilder(audioRequest_).mergeFrom(value).buildPartial();
        } else {
          audioRequest_ = value;
        }
        onChanged();
      } else {
        audioRequestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public Builder clearAudioRequest() {
      if (audioRequestBuilder_ == null) {
        audioRequest_ = null;
        onChanged();
      } else {
        audioRequest_ = null;
        audioRequestBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public com.google.cloud.speech.v1.AudioRequest.Builder getAudioRequestBuilder() {
      
      onChanged();
      return getAudioRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    public com.google.cloud.speech.v1.AudioRequestOrBuilder getAudioRequestOrBuilder() {
      if (audioRequestBuilder_ != null) {
        return audioRequestBuilder_.getMessageOrBuilder();
      } else {
        return audioRequest_ == null ?
            com.google.cloud.speech.v1.AudioRequest.getDefaultInstance() : audioRequest_;
      }
    }
    /**
     * <code>optional .google.cloud.speech.v1.AudioRequest audio_request = 2;</code>
     *
     * <pre>
     * The audio data to be recognized. For `NonStreamingRecognize`, all the
     * audio data must be contained in the first (and only) `RecognizeRequest`
     *  message. For streaming `Recognize`, sequential chunks of audio data are
     * sent in sequential `RecognizeRequest` messages.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.cloud.speech.v1.AudioRequest, com.google.cloud.speech.v1.AudioRequest.Builder, com.google.cloud.speech.v1.AudioRequestOrBuilder> 
        getAudioRequestFieldBuilder() {
      if (audioRequestBuilder_ == null) {
        audioRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.cloud.speech.v1.AudioRequest, com.google.cloud.speech.v1.AudioRequest.Builder, com.google.cloud.speech.v1.AudioRequestOrBuilder>(
                getAudioRequest(),
                getParentForChildren(),
                isClean());
        audioRequest_ = null;
      }
      return audioRequestBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.speech.v1.RecognizeRequest)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognizeRequest)
  private static final com.google.cloud.speech.v1.RecognizeRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.speech.v1.RecognizeRequest();
  }

  public static com.google.cloud.speech.v1.RecognizeRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RecognizeRequest>
      PARSER = new com.google.protobuf.AbstractParser<RecognizeRequest>() {
    public RecognizeRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new RecognizeRequest(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<RecognizeRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RecognizeRequest> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.speech.v1.RecognizeRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

