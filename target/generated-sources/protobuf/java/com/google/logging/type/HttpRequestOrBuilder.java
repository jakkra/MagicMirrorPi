// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/type/http_request.proto

package com.google.logging.type;

public interface HttpRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.logging.type.HttpRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string request_method = 1;</code>
   *
   * <pre>
   * The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.
   * </pre>
   */
  java.lang.String getRequestMethod();
  /**
   * <code>optional string request_method = 1;</code>
   *
   * <pre>
   * The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.
   * </pre>
   */
  com.google.protobuf.ByteString
      getRequestMethodBytes();

  /**
   * <code>optional string request_url = 2;</code>
   *
   * <pre>
   * The scheme (http, https), the host name, the path and the query
   * portion of the URL that was requested.
   * Example: `"http://example.com/some/info?color=red"`.
   * </pre>
   */
  java.lang.String getRequestUrl();
  /**
   * <code>optional string request_url = 2;</code>
   *
   * <pre>
   * The scheme (http, https), the host name, the path and the query
   * portion of the URL that was requested.
   * Example: `"http://example.com/some/info?color=red"`.
   * </pre>
   */
  com.google.protobuf.ByteString
      getRequestUrlBytes();

  /**
   * <code>optional int64 request_size = 3;</code>
   *
   * <pre>
   * The size of the HTTP request message in bytes, including the request
   * headers and the request body.
   * </pre>
   */
  long getRequestSize();

  /**
   * <code>optional int32 status = 4;</code>
   *
   * <pre>
   * The response code indicating the status of response.
   * Examples: 200, 404.
   * </pre>
   */
  int getStatus();

  /**
   * <code>optional int64 response_size = 5;</code>
   *
   * <pre>
   * The size of the HTTP response message sent back to the client, in bytes,
   * including the response headers and the response body.
   * </pre>
   */
  long getResponseSize();

  /**
   * <code>optional string user_agent = 6;</code>
   *
   * <pre>
   * The user agent sent by the client. Example:
   * `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
   * </pre>
   */
  java.lang.String getUserAgent();
  /**
   * <code>optional string user_agent = 6;</code>
   *
   * <pre>
   * The user agent sent by the client. Example:
   * `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
   * </pre>
   */
  com.google.protobuf.ByteString
      getUserAgentBytes();

  /**
   * <code>optional string remote_ip = 7;</code>
   *
   * <pre>
   * The IP address (IPv4 or IPv6) of the client that issued the HTTP
   * request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
   * </pre>
   */
  java.lang.String getRemoteIp();
  /**
   * <code>optional string remote_ip = 7;</code>
   *
   * <pre>
   * The IP address (IPv4 or IPv6) of the client that issued the HTTP
   * request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
   * </pre>
   */
  com.google.protobuf.ByteString
      getRemoteIpBytes();

  /**
   * <code>optional string referer = 8;</code>
   *
   * <pre>
   * The referer URL of the request, as defined in
   * [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
   * </pre>
   */
  java.lang.String getReferer();
  /**
   * <code>optional string referer = 8;</code>
   *
   * <pre>
   * The referer URL of the request, as defined in
   * [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
   * </pre>
   */
  com.google.protobuf.ByteString
      getRefererBytes();

  /**
   * <code>optional bool cache_hit = 9;</code>
   *
   * <pre>
   * Whether or not an entity was served from cache
   * (with or without validation).
   * </pre>
   */
  boolean getCacheHit();

  /**
   * <code>optional bool validated_with_origin_server = 10;</code>
   *
   * <pre>
   * Whether or not the response was validated with the origin server before
   * being served from cache. This field is only meaningful if `cache_hit` is
   * True.
   * </pre>
   */
  boolean getValidatedWithOriginServer();
}
